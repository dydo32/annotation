<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
        
 	<!-- 
 		어노테이션을 이용해서 설정작업을 처리
 		@기호로 미리 등록되어 있는 명령어를 이용해서 컴파일시에 작업을 처리할 수 있도록 
 		context:component-scan으로 등록한 패키지에서 선언된 빈을 찾아 자동으로 빈을 생성하고
 		injection시켜주는 작업까지 처리해준다.
 		기본 빈을 생성하는 어노테이션 기호를 이용해서 처리하고 모두 동일하게 작업해도 되나 
 		빈을 기능적으로 잘 활용하기 위해서 적절한 어노테이션 기호를 이용
 		적절하게 구분하는 이유는 가독성때문이기도 하지만 각 특성에 맞게 어노테이션 내부에서 
 		지원하는 기능이 다르게 때문에 적절하게 사용하기 위해
 		@Component: 기본 빈을 정의하고 등록할 때 사용
 		@Service: 서비스 등록
 					=> 빈의 이름을 정의하지 않는 경우, 클래스의 첫 글자를 소문자로 바꾼 이름을 빈의 이름으로 등록
 		@Repository: db연동을 위한 빈(dao)
 		@Controller: 스프링웹 MVC에서 사용하는 컨트롤러로 등록할 때 사용
 	 -->
 	 
 	 <!-- context:component-scan으로 패키지 등록-->
<!--  	 <context:component-scan base-package="exam"/>
 	 <context:component-scan base-package="myfinal"/>
	 <context:component-scan base-package="emp"/> 	 -->
</beans>
